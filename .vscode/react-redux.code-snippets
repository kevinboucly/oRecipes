{
	// Place your espace de travail oRecipes snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"components" : {
		"scope": "javascript",
		"prefix": "comp",
		"description": "create a simple component",
		"body": [
			"import React from 'react';",
			"",
			"const $1 = () => (",
			"	<div>$1</div>",
			");",
			"export default $1;",
			"",
		],
	},
	"import": {
		"scope": "javascript",
		"prefix": "imp",
		"description": "Import component",
		"body": [
			"import $1 from 'src/components/$1';",
		],
	},
	"vars": {
		"scope": "sass, scss",
		"prefix": "vars",
		"description": "Import vars",
		"body": [
			"@import 'src/styles/vars';",
		],
	},
	"componentsProps" : {
		"scope": "javascript",
		"prefix": "compProps",
		"description": "create a simple component with props",
		"body": [
			"import React from 'react';",
			"import PropTypes from 'prop-types';",
			"",
			"const $1 = ({ $2} ) => (",
			"	<div>$1</div>",
			");",
			"$1.propTypes = {",
			"$2: $3,",
			"};"
			"export default $1;",
			"",
		],
	},
	"reducer": {
		"scope": "javascript",
		"prefix": "reducer",
		"description": "create a simple reducer",
		"body": [
			"import {} from 'src/actions';",
			"",
			"const initialState = {",
			"",
			"};",
			"",
			"const reducer = (state = initialState, action = {}) => {",
			"	switch (action.type) {",
			"		default:",
			"			return state;",
			"	}",
			"};",
			"",
			"export default reducer;",
			"",
		]
	},
	"container": {
		"scope": "javascript",
		"prefix": "container",
		"body": [
			"import { connect } from 'react-redux';",
			"",
			"import $1 from 'src/components/$1';",
			"",
			"const mapStateToProps = (state) => ({",
			"});",
			"const mapDispatchToProps = (dispatch) => ({",
			"});",
			"",
			"export default connect(",
			"	mapStateToProps,",
			"	mapDispatchToProps,",
			")($1);",
			"", 
		]
	}
}
